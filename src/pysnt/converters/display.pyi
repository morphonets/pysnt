"""
Type stubs for display.py

Auto-generated stub file.
"""

from typing import Any, Callable, Dict, List, Optional, Tuple
from matplotlib.figure import Figure

def _is_snt_object(obj: Any) -> bool: ...

def _is_snt_tree(obj: Any) -> bool: ...

def _is_snt_path(obj: Any) -> bool: ...

def _is_xarray_object(obj: Any) -> bool: ...

def _get_display_handler(obj: Any) -> Tuple[str, Optional[Callable]]: ...

def display(obj: Any, **kwargs: Any) -> Any: ...

def _handle_snt_object_display(obj: Any, **kwargs: Any) -> Any: ...

def _display_snt_object(obj: Any, **kwargs: Any) -> Any: ...

def _display_snt_table(obj: Any, **kwargs: Any) -> Any: ...

def _display_snt_chart(obj: Any, **kwargs: Any) -> Any: ...

def _display_snt_graph(obj: Any, **kwargs: Any) -> Any: ...

def _display_pandas_dataframe(df: Any, **kwargs: Any) -> Any: ...

def _display_imageplus(obj: Any, **kwargs: Any) -> Any: ...

def _display_xarray(xarr: Any, **kwargs: Any) -> None: ...

def _display_matplotlib_figure(fig: Figure, **kwargs: Any) -> None: ...

def _display_with_auto_conversion(obj: Any, **kwargs: Any) -> Any: ...

def _show_matplotlib_figure(fig: Any, **kwargs: Any) -> bool: ...

def _get_default_layout_for_graph_type(graph_type: str) -> str: ...

def _graph_to_matplotlib(graph: Any, **kwargs: Any) -> Figure: ...

def _display_xarray_dataset(dataset: Any, **kwargs: Any) -> Any: ...

def _create_dataset_summary_plot(dataset: Any, display_vars: List[str], title: str, figsize: tuple) -> bool: ...

def _create_dataset_distribution_plot(dataset: Any, display_vars: List[str], title: str, figsize: tuple) -> bool: ...

def _create_dataset_correlation_plot(dataset: Any, display_vars: List[str], title: str, figsize: tuple) -> bool: ...

def _display_array_data(data: Any, source_type: Any, **kwargs: Any) -> Any: ...

def _display_dataset_as_dataframe(dataset: Any, **kwargs: Any) -> bool: ...

def _show_pandasgui_dataframe(df: Any, title: Any, **kwargs: Any) -> bool: ...

_DISPLAY_HANDLERS: Any
def register_display_handler(obj_type: str, handler_func: Callable[[Dict[str, Any]], None]) -> Any: ...

def _display_generic_object(obj: Any, **kwargs: Any) -> Any: ...
