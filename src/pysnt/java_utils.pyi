"""
Type stubs for java_utils.py

Auto-generated stub file.
"""

from typing import Any, Dict, List, Optional, Union

logger: Any
REQUIRED_JAVA_VERSION: Any
MIN_JAVA_VERSION: Any
def check_java_installation() -> Dict[str, Any]: ...

def _find_java_executable() -> Optional[str]: ...

def _parse_java_version(version_output: str) -> Dict[str, Any]: ...

def ensure_java_available(required_version: int, auto_install: bool) -> bool: ...

def install_openjdk(version: int) -> bool: ...

def print_java_status() -> Any: ...

def setup_java_environment() -> bool: ...

def inspect(class_or_object: Union[str, Any], keyword: str, methods: bool, fields: bool, constructors: bool, static_only: bool, case_sensitive: bool, max_results: int) -> None: ...

def _resolve_java_class(class_or_object: Union[str, Any]) -> Optional[Any]: ...

def _matches_keyword(name: str, keyword: str, case_sensitive: bool) -> bool: ...

def _show_constructors(java_class: Any, keyword: str, case_sensitive: bool, max_results: int) -> Any: ...

def _show_methods(java_class: Any, keyword: str, case_sensitive: bool, static_only: bool, max_results: int) -> Any: ...

def _show_fields(java_class: Any, keyword: str, case_sensitive: bool, static_only: bool, max_results: int) -> Any: ...

def get_methods(class_or_object: Union[str, Any], static_only: bool = False, include_inherited: bool = True) -> List[Dict[str, Any]]: ...

def get_fields(class_or_object: Union[str, Any], static_only: bool = False) -> List[Dict[str, Any]]: ...

def find_members(class_or_object: Union[str, Any], keyword: str, include_methods: bool = True, include_fields: bool = True, static_only: bool = False, case_sensitive: bool = False) -> Dict[str, List[Dict[str, Any]]]: ...
